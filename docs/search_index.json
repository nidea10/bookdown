[["index.html", "MODELACIÓN DEL PRECIO PARA LA COMPRA Y VENTA DE ACEITE DE SOYA Chapter 1 Resumen", " MODELACIÓN DEL PRECIO PARA LA COMPRA Y VENTA DE ACEITE DE SOYA Nidia Munevar - Leonardo Palacios 2023-09-22 Chapter 1 Resumen El proyecto aplicado a realizar es la modelación del precio para la compra y venta de aceite de soya. "],["introduccion.html", "Chapter 2 Introduccion", " Chapter 2 Introduccion En el mercado de venta y compra de materias primas agrícolas intervienen diferentes actores, los precios son públicos y son afectados por diferentes variables tales como el precio del petróleo, la tasa de cambio, el clima entre otros elementos. La necesidad de los actores es mejorar sus decisiones y de esta forma su rentabilidad, los precios de las materias primas afectan directamente al mercado y a los precios de los bienes producidos a partir de estas, es decir estos valores terminan impactando al comprador final. "],["justificacion.html", "Chapter 3 Justificacion", " Chapter 3 Justificacion El proyecto está planteado ante una necesidad de los actores que requieren mejorar sus decisiones y de esta forma su rentabilidad. Los precios de las materias primas afectan directamente al mercado y a los precios de los bienes producidos a partir de estas materias, es decir estos valores terminan impactando al comprador final. "],["serie-de-tiempo.html", "Chapter 4 Serie de Tiempo", " Chapter 4 Serie de Tiempo # Cargar la biblioteca quantmod library(quantmod) ## Loading required package: xts ## Loading required package: zoo ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric ## Loading required package: TTR ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo # Especificar el símbolo para futuros de soja symbol &lt;- &quot;ZS=F&quot; # Descargar los datos históricos desde el 1 de enero de 2010 hasta hoy getSymbols(symbol, from = &quot;2010-01-01&quot;, to = Sys.Date(), auto.assign = TRUE) ## [1] &quot;ZS=F&quot; # Crear un data frame con la serie de tiempo soybean_data &lt;- data.frame(Date = index(get(symbol)), Open = Op(get(symbol)), High = Hi(get(symbol)), Low = Lo(get(symbol)), Close = Cl(get(symbol)), Volume = Vo(get(symbol)) ) # Eliminar filas con valores NA soybean_data &lt;- na.omit(soybean_data) # Muestra los primeros registros del data frame head(soybean_data) ## Date ZS.F.Open ZS.F.High ZS.F.Low ZS.F.Close ZS.F.Volume ## 2010-01-04 2010-01-04 1043.00 1065.50 1041.25 1049.50 25947 ## 2010-01-05 2010-01-05 1047.00 1056.00 1042.00 1052.25 21073 ## 2010-01-06 2010-01-06 1050.00 1058.50 1042.75 1050.50 17567 ## 2010-01-07 2010-01-07 1050.50 1052.00 1016.50 1017.75 11750 ## 2010-01-08 2010-01-08 1018.25 1018.25 1005.00 1013.00 11750 ## 2010-01-11 2010-01-11 1014.00 1022.00 997.50 1001.75 11750 class(soybean_data) ## [1] &quot;data.frame&quot; # Cargar la biblioteca xts library(xts) # Crear una serie de tiempo xts a partir del data frame soybean_data soybean_xts &lt;- xts(soybean_data[, -1], order.by = soybean_data$Date) # Verificar la serie de tiempo head(soybean_xts) ## ZS.F.Open ZS.F.High ZS.F.Low ZS.F.Close ZS.F.Volume ## 2010-01-04 1043.00 1065.50 1041.25 1049.50 25947 ## 2010-01-05 1047.00 1056.00 1042.00 1052.25 21073 ## 2010-01-06 1050.00 1058.50 1042.75 1050.50 17567 ## 2010-01-07 1050.50 1052.00 1016.50 1017.75 11750 ## 2010-01-08 1018.25 1018.25 1005.00 1013.00 11750 ## 2010-01-11 1014.00 1022.00 997.50 1001.75 11750 class(soybean_xts) ## [1] &quot;xts&quot; &quot;zoo&quot; "],["analisis-exploratorio.html", "Chapter 5 Analisis Exploratorio", " Chapter 5 Analisis Exploratorio # Cargar la biblioteca quantmod library(quantmod) # Especificar el símbolo para futuros de soja symbol &lt;- &quot;ZS=F&quot; # Descargar los datos históricos desde el 1 de enero de 2010 hasta hoy getSymbols(symbol, from = &quot;2010-01-01&quot;, to = Sys.Date(), auto.assign = TRUE) ## [1] &quot;ZS=F&quot; # Crear un data frame con la serie de tiempo soybean_data &lt;- data.frame(Date = index(get(symbol)), Open = Op(get(symbol)), High = Hi(get(symbol)), Low = Lo(get(symbol)), Close = Cl(get(symbol)), Volume = Vo(get(symbol)) ) # Eliminar filas con valores NA soybean_data &lt;- na.omit(soybean_data) head(soybean_data) ## Date ZS.F.Open ZS.F.High ZS.F.Low ZS.F.Close ZS.F.Volume ## 2010-01-04 2010-01-04 1043.00 1065.50 1041.25 1049.50 25947 ## 2010-01-05 2010-01-05 1047.00 1056.00 1042.00 1052.25 21073 ## 2010-01-06 2010-01-06 1050.00 1058.50 1042.75 1050.50 17567 ## 2010-01-07 2010-01-07 1050.50 1052.00 1016.50 1017.75 11750 ## 2010-01-08 2010-01-08 1018.25 1018.25 1005.00 1013.00 11750 ## 2010-01-11 2010-01-11 1014.00 1022.00 997.50 1001.75 11750 # Cargar la biblioteca xts library(xts) # Crear una serie de tiempo xts a partir del data frame soybean_data soybean_xts &lt;- xts(soybean_data[, -1], order.by = soybean_data$Date) # Verificar la serie de tiempo head(soybean_xts) ## ZS.F.Open ZS.F.High ZS.F.Low ZS.F.Close ZS.F.Volume ## 2010-01-04 1043.00 1065.50 1041.25 1049.50 25947 ## 2010-01-05 1047.00 1056.00 1042.00 1052.25 21073 ## 2010-01-06 1050.00 1058.50 1042.75 1050.50 17567 ## 2010-01-07 1050.50 1052.00 1016.50 1017.75 11750 ## 2010-01-08 1018.25 1018.25 1005.00 1013.00 11750 ## 2010-01-11 1014.00 1022.00 997.50 1001.75 11750 class(soybean_xts) ## [1] &quot;xts&quot; &quot;zoo&quot; # Acceder a la columna &quot;ZS.F.Close&quot; en soybean_xts close_prices &lt;- soybean_xts[, &quot;ZS.F.Close&quot;] # Imprimir las primeras filas de la columna Close print(head(close_prices)) ## ZS.F.Close ## 2010-01-04 1049.50 ## 2010-01-05 1052.25 ## 2010-01-06 1050.50 ## 2010-01-07 1017.75 ## 2010-01-08 1013.00 ## 2010-01-11 1001.75 # Cargar la biblioteca ggplot2 para hacer gráficos library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.2.3 # Crear un gráfico de serie de tiempo ggplot(data = NULL, aes(x = index(close_prices), y = close_prices)) + geom_line(color = &quot;blue&quot;) + labs(x = &quot;Fecha&quot;, y = &quot;Precio de Cierre&quot;, title = &quot;Serie de Tiempo de Futuros de Soja&quot;) + theme_minimal() ## Don&#39;t know how to automatically pick scale for object of type &lt;xts/zoo&gt;. ## Defaulting to continuous. "],["promedio-movil.html", "Chapter 6 Promedio Movil", " Chapter 6 Promedio Movil Cuando aplicamos un promedio móvil a una serie de tiempo, cada punto de la serie transformada (promediada) es el promedio de un número determinado de puntos anteriores, actuales y futuros de la serie original. Este número de puntos que decides promediar se llama “ventana” del promedio móvil. # Cargar la biblioteca quantmod library(quantmod) # Especificar el símbolo para futuros de soja symbol &lt;- &quot;ZS=F&quot; # Descargar los datos históricos desde el 1 de enero de 2010 hasta hoy getSymbols(symbol, from = &quot;2010-01-01&quot;, to = Sys.Date(), auto.assign = TRUE) ## Warning: ZS=F contains missing values. Some functions will not work if objects ## contain missing values in the middle of the series. Consider using na.omit(), ## na.approx(), na.fill(), etc to remove or replace them. ## [1] &quot;ZS=F&quot; # Crear un data frame con la serie de tiempo soybean_data &lt;- data.frame(Date = index(get(symbol)), Open = Op(get(symbol)), High = Hi(get(symbol)), Low = Lo(get(symbol)), Close = Cl(get(symbol)), Volume = Vo(get(symbol)) ) # Eliminar filas con valores NA soybean_data &lt;- na.omit(soybean_data) # Muestra los primeros registros del data frame # head(soybean_data) # Cargar la biblioteca xts library(xts) # Crear una serie de tiempo xts a partir del data frame soybean_data soybean_xts &lt;- xts(soybean_data[, -1], order.by = soybean_data$Date) # Verificar la serie de tiempo # head(soybean_xts) library(ggplot2) library(TTR) library(scales) ## Warning: package &#39;scales&#39; was built under R version 4.2.3 # Convertir el objeto xts a data.frame soybean_df &lt;- as.data.frame(soybean_xts) soybean_df$Date &lt;- index(soybean_xts) # Calcular SMA_200 y SMA_500 soybean_df$SMA_200 &lt;- SMA(soybean_df$ZS.F.Close, n = 200) soybean_df$SMA_500 &lt;- SMA(soybean_df$ZS.F.Close, n = 500) # Usar ggplot2 para visualizar los datos ggplot(soybean_df, aes(x = Date)) + geom_line(aes(y = ZS.F.Close, color = &#39;Precio de Cierre&#39;), alpha = 0.75) + geom_line(aes(y = SMA_200, color = &#39;Promedio Móvil 200&#39;), size = 1, na.rm = TRUE) + geom_line(aes(y = SMA_500, color = &#39;Promedio Móvil 500&#39;), size = 1, na.rm = TRUE) + theme_minimal(base_size = 15) + labs(title = &#39;Serie de Tiempo de Futuros de Soja&#39;, subtitle = &#39;Con Promedios Móviles de 200 y 500 Días&#39;, y = &#39;Precio de Cierre&#39;) + theme(axis.title.x = element_blank(), axis.text.x = element_text(size = 10, angle = 90, vjust = 0.5), plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), legend.position = &quot;bottom&quot;) + scale_x_date(date_breaks = &quot;1 year&quot;, date_labels = &quot;%Y&quot;) + scale_y_continuous(labels = dollar_format()) + scale_color_manual(values = c(&#39;Precio de Cierre&#39; = &#39;blue&#39;, &#39;Promedio Móvil 200&#39; = &#39;red&#39;, &#39;Promedio Móvil 500&#39; = &#39;green&#39;), name = &quot;&quot;) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. Observaciones: Entre los años 2013 y mediados del 2014 se puede ver cambios en la tendencia de la serie de tiempo de futuros de la soya, tamto para el promedio movil de 200 días, como para el de 500 días el cual es mas marcado. Entre los años 2021 y mediados del 2023 se puede ver cambios en la tendencia de la serie de tiempo de futuros de la soya, tamto para el promedio movil de 200 días, como para el de 500 días el cual es mas marcado.Se podria llegar a validar por medio de un mayor estudio de este tiempo si la afectación fue causada por el desarrollo de la pandemia del covid-19 la cul inicio en marzo de 2020 e inicio a retrocer en Agosto de 2021 cuando se inicio el uso de las vacunas. Al suavizar las fluctuaciones menores, a traves de los promedios móviles se logro resaltar las tendencias subyacentes en los datos. "],["rezago.html", "Chapter 7 Rezago", " Chapter 7 Rezago El concepto de rezago es fundamental para analizar y modelar series de tiempo porque permite entender cómo los valores pasados pueden influir en los valores presentes o futuros de la serie. Al analizar los rezagos, podemos identificar patrones, hacer predicciones más precisas y entender mejor la dinámica subyacente de los datos. # Sin cargar la librería dplyr para evitar conflictos datos_lag &lt;- data.frame( Close = as.numeric(coredata(soybean_xts)), Lag = as.numeric(coredata(stats::lag(soybean_xts))) # Usar stats::lag para evitar conflictos ) # Comprobando que ambos vectores tengan la misma longitud stopifnot(length(datos_lag$Close) == length(datos_lag$Lag)) # Detiene la ejecución si no son TRUE # Crear el gráfico de rezago con ggplot2 library(ggplot2) ggplot(datos_lag, aes(x=Lag, y=Close)) + geom_point(aes(color = Close), alpha=0.6) + geom_smooth(method = &#39;lm&#39;, se = FALSE, color=&quot;blue&quot;, linetype=&quot;dashed&quot;) + scale_color_gradient(low=&quot;red&quot;, high=&quot;green&quot;) + theme_minimal() + labs(title=&quot;Gráfico de Rezago para Precio de Cierre&quot;, x=&quot;Rezago 1&quot;, y=&quot;Precio de Cierre&quot;) + theme(legend.position=&quot;none&quot;) ## `geom_smooth()` using formula = &#39;y ~ x&#39; ## Warning: Removed 5 rows containing non-finite values (`stat_smooth()`). ## Warning: Removed 5 rows containing missing values (`geom_point()`). Se ve un patrón claro o una agrupación de puntos en el gráfico de rezago 1, por lo tanto es probable que exista una autocorrelación significativa. Se puede considerar modelos de series de tiempo como ARIMA que toman en cuenta la autocorrelación para hacer predicciones más precisas de ser necesario. "],["descomposicion.html", "Chapter 8 Descomposicion", " Chapter 8 Descomposicion Se refiere a los patrones o tendencias que se repiten a intervalos regulares, como cada día, mes, trimestre o año, dependiendo de la frecuencia de los datos. En otras palabras, es como un ciclo que se repite en el tiempo. DESCOMPOSICION Con la funcion decompose podemos hallar la: Observed: Serie de tiempo original. Tendencia (trend): Muestra la dirección general en la que se mueven los datos a largo plazo, sin tener en cuenta las fluctuaciones estacionales o irregulares. Estacionalidad (seasonal): Representa las fluctuaciones que ocurren en intervalos regulares, como los cambios diarios, mensuales o anuales, debido a la estacionalidad. Error o Residuo (random): Es la parte de la serie de tiempo que no se puede atribuir ni a la tendencia ni a la estacionalidad. Captura la variabilidad en los datos que no se puede explicar por los otros dos componentes. # Convertir a objeto ts, aquí supondré que tienes datos diarios. frecuencia &lt;- 365 # (12 para mensual, 4 para trimestral, etc.) soybean_ts &lt;- ts(soybean_xts[, &quot;ZS.F.Close&quot;], frequency = frecuencia) # Utilizar decompose soybean_decomposed &lt;- decompose(soybean_ts) plot(soybean_decomposed) Al validar el componenete estacional de la serie por separado, como se ve en la siguiente imagen: # Extraer el componente estacional y convertir el tiempo en fecha seasonal_df &lt;- data.frame( Date = as.Date(index(soybean_xts)), Seasonal = as.numeric(soybean_decomposed$seasonal) ) # Eliminar las filas con NA en el componente estacional (pueden aparecer dependiendo del método de descomposición) seasonal_df &lt;- seasonal_df[!is.na(seasonal_df$Seasonal), ] library(ggplot2) ggplot(seasonal_df, aes(x=Date, y=Seasonal)) + geom_line(color=&quot;blue&quot;) + theme_minimal() + labs(title=&quot;Componente Estacional de la Serie Temporal&quot;, x=&quot;Fecha&quot;, y=&quot;Estacionalidad&quot;) + theme(legend.position=&quot;none&quot;) Podemos deducir que la serie de tiempo de los precios del aceite de soya: Muestra patrones claros y consistentes, esto sugiere que la serie temporal tiene ciclos regulares que se repiten a intervalos fijos. Se pueden identificar en qué momentos del ciclo tienden a ocurrir los valores altos y bajos de la serie. "],["estacionariedad.html", "Chapter 9 Estacionariedad", " Chapter 9 Estacionariedad La prueba de Dickey-Fuller, específicamente el test ADF (Augmented Dickey-Fuller), es una prueba estadística utilizada para determinar si una serie temporal tiene una raíz unitaria, es decir, si es no estacionaria y presenta alguna forma de estructura temporal como una tendencia o una estacionalidad. Vamos a comprobar mediante esta prueba si es o no estacionaria la serie de tiempo del precio del aceite de soya. # Cargar el paquete necesario library(tseries) ## Warning: package &#39;tseries&#39; was built under R version 4.2.3 # Supón que tienes una serie temporal llamada &#39;mi_serie&#39; # Realizar la prueba de Dickey-Fuller Aumentada resultado_adf &lt;- adf.test(soybean_ts) # Imprimir el resultado print(resultado_adf) ## ## Augmented Dickey-Fuller Test ## ## data: soybean_ts ## Dickey-Fuller = -2.0297, Lag order = 15, p-value = 0.5657 ## alternative hypothesis: stationary Cuando hacemos una prueba como esta, estamos tratando de averiguar si la serie de tiempo es “estacionaria” o no. Una serie estacionaria es aquella cuyas propiedades, como la media y la varianza, no cambian con el tiempo. En esta prueba, tenemos algo llamado valor p, que es como un termómetro que nos dice qué tan seguros estamos de si la serie de tiempo es estacionaria o no. Un valor p pequeño (menor que 0.05) nos dice: “La serie es estacionaria”. Un valor p grande (mayor que 0.05) nos dice: “La serie no es estacionaria”. En este caso, el valor p es 0.5657, que es bastante grande, así que, la serie de tiempo no es estacionaria. "],["diferenciacion.html", "Chapter 10 Diferenciacion", " Chapter 10 Diferenciacion Diferenciar una serie temporal es un proceso utilizado para hacer que una serie no estacionaria se vuelva estacionaria. La idea es transformar la serie de datos para estabilizar la media de la serie temporal, eliminando tendencias y efectos estacionales. En otras palabras, se busca que las propiedades de la serie (como la media y la varianza) no cambien con el tiempo. # Inicializa un contador para las diferenciaciones diferencias &lt;- 0 # Realiza el test ADF y verifica la estacionariedad while(TRUE) { p_value &lt;- adf.test(soybean_ts)$p.value cat(&quot;Número de diferencias:&quot;, diferencias, &quot;- Valor p:&quot;, p_value, &quot;\\n&quot;) # Si el valor p es menor que 0.05, la serie es estacionaria, y puedes salir del bucle. if(p_value &lt; 0.05) { cat(&quot;La serie se volvió estacionaria después de&quot;, diferencias, &quot;diferenciaciones.\\n&quot;) break } # Si has llegado al final de la serie, sal del bucle if(length(soybean_ts) &lt;= 1) { cat(&quot;La serie no se volvió estacionaria después de diferenciar.\\n&quot;) break } # Si no es estacionaria, diferenciar la serie una vez más y continuar el bucle. soybean_ts &lt;- diff(soybean_ts) diferencias &lt;- diferencias + 1 } ## Número de diferencias: 0 - Valor p: 0.5657422 ## Warning in adf.test(soybean_ts): p-value smaller than printed p-value ## Número de diferencias: 1 - Valor p: 0.01 ## La serie se volvió estacionaria después de 1 diferenciaciones. Conclusión: Antes de realizar cualquier diferenciación (d = 0), el valor p de la prueba de Dickey-Fuller Aumentada es 0.5657422, lo que es mayor que 0.05. Por lo tanto, no puedes rechazar la hipótesis nula de que existe una raíz unitaria, y se concluye que la serie original no es estacionaria. Después de diferenciar la serie una vez (d = 1), el valor p de la prueba de Dickey-Fuller Aumentada es 0.01, lo cual es menor que 0.05. La serie de tiempo original no es estacionaria, pero después de realizar una diferenciación, la serie resultante sí es estacionaria. Fue necesario transformarla o diferenciarla para eliminar la tendencia y estabilizar la varianza, antes de aplicar modelos de series temporales como ARIMA. "],["final-words.html", "Chapter 11 Final Words", " Chapter 11 Final Words We have finished a nice book. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
